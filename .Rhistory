proj_col_order <- c('2025_low',
'2025_high',
'2030_low',
'2030_high',
'2035_low',
'2035_high',
'2040_low',
'2040_high')
html_table <-  final_summary_table %>%
rename(!!stubhead := category) %>%
gt() %>%
tab_spanner(label = "2025", columns = proj_col_order[1:2]) %>%
tab_spanner(label = "2030", columns = proj_col_order[3:4]) %>%
tab_spanner(label = "2035", columns = proj_col_order[5:6]) %>%
tab_spanner(label = "2040", columns = proj_col_order[7:8]) %>%
cols_label(`2025_low` = 'Low') %>%
cols_label(`2030_low` = 'Low') %>%
cols_label(`2035_low` = 'Low') %>%
cols_label(`2040_low` = 'Low') %>%
cols_label(`2025_high` = 'High') %>%
cols_label(`2030_high` = 'High') %>%
cols_label(`2035_high` = 'High') %>%
cols_label(`2040_high` = 'High') %>%
cols_align('center', columns = everything()) %>%
cols_align('left', columns = stubhead) %>%
#tab_spanner(label = "Historical ", columns = all_of(hist_years), level = 2) %>%
tab_spanner(label = "Projected", columns = all_of(proj_col_order))%>%
tab_header(title = paste0('Projected Percent Change U.S. GHG Emissions Compared to 2005 Levels (2023 Policy Baseline), by ',stubhead,': 2025-2040 (%)')) %>%
gt_theme_nc_blue()
}
pct_change_html <- create_pct_change_html_table(pct_change_table, 'Gas', config)
pct_change_html
create_html_table <- function(final_summary_table, stubhead, config){
hist_years <- c('2005','2010','2015','2020', config$base_year)
proj_col_order <- c('2025_low',
'2025_high',
'2030_low',
'2030_high',
'2035_low',
'2035_high',
'2040_low',
'2040_high')
html_table <-  final_summary_table %>%
rename(!!stubhead := category) %>%
gt() %>%
tab_spanner(label = "2025", columns = proj_col_order[1:2]) %>%
tab_spanner(label = "2030", columns = proj_col_order[3:4]) %>%
tab_spanner(label = "2035", columns = proj_col_order[5:6]) %>%
tab_spanner(label = "2040", columns = proj_col_order[7:8]) %>%
cols_label(`2025_low` = 'Low') %>%
cols_label(`2030_low` = 'Low') %>%
cols_label(`2035_low` = 'Low') %>%
cols_label(`2040_low` = 'Low') %>%
cols_label(`2025_high` = 'High') %>%
cols_label(`2030_high` = 'High') %>%
cols_label(`2035_high` = 'High') %>%
cols_label(`2040_high` = 'High') %>%
cols_align('center', columns = everything()) %>%
cols_align('left', columns = stubhead) %>%
tab_spanner(label = "Historical ", columns = all_of(hist_years), level = 2) %>%
tab_spanner(label = "Projected", columns = all_of(proj_col_order))%>%
tab_header(title = paste0('Historical and Projected U.S. GHG Emissions (2023 Policy Baseline), by ',stubhead,': 2005-2040 (MMT CO2e)')) %>%
gt_theme_nc_blue()
}
create_pct_change_table <- function(category, grouping, projections_all_sm, config) {
col_order <- c('category','year','low','high')
summary <- projections_all_sm %>%
filter(!gas == 'Total') %>%  # WTH?? fix pls usproj
rename(category = .data[[category]]) %>%
filter(grouping == grouping) %>%
filter(year %in% config$table) %>%
group_by(proj_name,category, year) %>%
summarise(cat_sum = sum(sum)) %>%
add_pct_change_05() %>%
select(!cat_sum) %>%
ungroup()
summary_total_gross <- projections_all_sm %>%
filter(!gas == 'Total') %>%  # WTH?? fix pls usproj
rename(category = .data[[category]]) %>%
filter(grouping == grouping) %>%
filter(year %in% config$table) %>%
group_by(proj_name,category, year) %>%
summarise(cat_sum = sum(sum)) %>%
filter(!category == 'LULUCF Sink') %>%
group_by(proj_name,year) %>%
summarise(cat_sum = sum(cat_sum)) %>%
ungroup() %>%
mutate(pct_change_05 = (cat_sum/cat_sum[year==2005]-1)) %>%
mutate(pct_change_05 = round(pct_change_05,2)) %>%
group_by(year) %>%
mutate(low = min(pct_change_05, na.rm=TRUE),
high = max(pct_change_05, na.rm=TRUE)) %>%
ungroup() %>%
select(year,low,high) %>%
distinct() %>%
mutate(category = 'Total Gross Emissions') %>%
ungroup() %>%
select(all_of(col_order))
summary_total_net <- projections_all_sm %>%
filter(!gas == 'Total') %>%  # WTH?? fix pls usproj
rename(category = .data[[category]]) %>%
filter(grouping == grouping) %>%
filter(year %in% config$table) %>%
group_by(proj_name,category, year) %>%
summarise(cat_sum = sum(sum)) %>%
group_by(proj_name,year) %>%
summarise(cat_sum = sum(cat_sum)) %>%
ungroup() %>%
mutate(pct_change_05 = (cat_sum/cat_sum[year==2005]-1)) %>%
mutate(pct_change_05 = round(pct_change_05,2)) %>%
group_by(year) %>%
mutate(low = min(pct_change_05, na.rm=TRUE),
high = max(pct_change_05, na.rm=TRUE)) %>%
ungroup() %>%
select(year,low,high) %>%
distinct() %>%
mutate(category = 'Total Net Emissions') %>%
ungroup() %>%
select(all_of(col_order))
if(category == 'gas'){
order_index <- c(2,1,4,3,5,6)
processed_datasets <- list()
for(gas in config$gas_order){
cat_pct_change <- summary %>%
filter(category == gas) %>%
group_by(year) %>%
mutate(low = min(pct_change_05, na.rm=TRUE),
high = max(pct_change_05, na.rm=TRUE)) %>%
ungroup() %>%
select(year,low,high) %>%
distinct() %>%
mutate(category = gas) %>%
select(all_of(col_order))
processed_datasets[[gas]] <- cat_pct_change
}
pct_change_table_df <- bind_rows(processed_datasets)
} else if(category == 'usproj_sector'){
processed_datasets <- list()
order_index <- c(2,5,3,1,6,4)
for(sector in config$sector_order){
cat_pct_change <- summary %>%
filter(category == sector) %>%
group_by(year) %>%
mutate(low = min(pct_change_05, na.rm=TRUE),
high = max(pct_change_05, na.rm=TRUE)) %>%
ungroup() %>%
select(year,low,high) %>%
distinct() %>%
mutate(category = sector) %>%
select(all_of(col_order))
processed_datasets[[sector]] <- cat_pct_change
}
pct_change_table_df <- bind_rows(processed_datasets)
}
else{rlang::abort('Enter "gas" or "usproj_sector" into as category.')}
pct_change_table_df_high_low <- create_high_low_df(pct_change_table_df)
pct_change_table_df_high_low <- pct_change_table_df_high_low[order_index,]
total_gross_emissions_high_low <- create_high_low_df(summary_total_gross)
total_net_emissions_high_low <- create_high_low_df(summary_total_net)
summary_lulucf_sink <- summary %>% filter(category == 'LULUCF Sink') %>%
group_by(year) %>%
mutate(low = min(pct_change_05),
high = max(pct_change_05)) %>%
select(category, year, low, high) %>%
distinct()
lulucf_sink_high_low <- create_high_low_df(summary_lulucf_sink)
proj_col_order <- c('2025_low',
'2025_high',
'2030_low',
'2030_high',
'2035_low',
'2035_high',
'2040_low',
'2040_high')
final_summary_table <- pct_change_table_df_high_low %>%
rbind(total_gross_emissions_high_low) %>%
rbind(lulucf_sink_high_low) %>%
rbind(total_net_emissions_high_low) %>% select(category,all_of(proj_col_order))
rownames(final_summary_table) <- NULL
final_summary_table_100 <- final_summary_table %>% mutate_if(is.numeric, ~ .*100)
return(final_summary_table_100)
}
tar_load(c(projections_all_sm, config))
gas_df <- create_summary_table('gas','wm', projections_all_sm, config)
sector_df <- create_summary_table('usproj_sector', 'wm', projections_all_sm, config)
gas_table <- create_html_table(gas_df, 'Gas',config)
sector_table <- create_html_table(sector_df, 'Sector',config)
gas_table
sector_table
pct_change_table <- create_pct_change_table('gas', 'wm', projections_all_sm, config)
pct_change_html <- create_pct_change_html_table(pct_change_table, 'Gas', config)
pct_change_html
pct_change_table <- create_pct_change_table('usproj_sector', 'wm', projections_all_sm, config)
pct_change_html <- create_pct_change_html_table(pct_change_table, 'Sector', config)
pct_change_html
tar_invalidate(everything())
# Load packages required to define the pipeline:
library(targets)
library(tarchetypes)
tar_invalidate(everything())
tar_make()
source('packages.R')
library(targets)
library(tarchetypes)
tar_source()
tar_load(c(projections_all_sm, config))
gas_df <- create_summary_table('gas','wm', projections_all_sm, config)
sector_df <- create_summary_table('usproj_sector', 'wm', projections_all_sm, config)
gas_table <- create_html_table(gas_df, 'Gas',config)
sector_table <- create_html_table(sector_df, 'Sector',config)
gas_table
library(targets)
library(targets)
library(tarchetypes)
tar_destroy()
tar_make()
tar_visnetwork(targets_only = TRUE)
tar_source()
tar_load(c(projections_all_sm, config))
gas_df <- create_summary_table('gas','wm', projections_all_sm, config)
View(gas_df)
category <- "gas"
grouping <- "wm"
gas_df <- create_summary_table(category,grouping, projections_all_sm, config)
View(gas_df)
tar_make(btr_tables_figs)
col_order <- c('category','year','low','high')
summary <- projections_all_sm %>%
filter(!gas == 'Total') %>%  # WTH?? fix pls usproj
rename(category = .data[[category]]) %>%
filter(grouping == grouping) %>%
filter(year %in% config$table) %>%
group_by(proj_name,category, year) %>%
summarise(cat_sum = sum(sum))
summary_total_gross <- summary %>%
filter(!category == 'LULUCF Sink') %>%
group_by(proj_name, year) %>%
summarise(value = sum(cat_sum)) %>%
group_by(year) %>%
mutate(low = min(value),
high = max(value)) %>%
select(year,low,high) %>%
distinct() %>%
mutate(category = 'Total Gross Emissions') %>%
select(all_of(col_order))
summary <- projections_all_sm %>%
filter(!gas == 'Total') %>%  # WTH?? fix pls usproj
rename(category = .data[[category]]) %>%
filter(grouping == grouping) %>%
filter(year %in% config$table) %>%
group_by(proj_name,category, year) %>%
summarise(cat_sum = sum(sum),.groups='drop')
create_summary_table <- function(category, grouping, projections_all_sm, config) {
col_order <- c('category','year','low','high')
summary <- projections_all_sm %>%
filter(!gas == 'Total') %>%  # WTH?? fix pls usproj
rename(category = .data[[category]]) %>%
filter(grouping == grouping) %>%
filter(year %in% config$table) %>%
group_by(proj_name,category, year) %>%
summarise(cat_sum = sum(sum),.groups='drop')
summary_total_gross <- summary %>%
filter(!category == 'LULUCF Sink') %>%
group_by(proj_name, year) %>%
summarise(value = sum(cat_sum),.groups='drop') %>%
group_by(year) %>%
mutate(low = min(value),
high = max(value)) %>%
select(year,low,high) %>%
distinct() %>%
mutate(category = 'Total Gross Emissions') %>%
select(all_of(col_order))
summary_total_net <- summary %>%
group_by(proj_name, year) %>%
summarise(value = sum(cat_sum),.groups='drop') %>%
group_by(year) %>%
mutate(low = min(value),
high = max(value)) %>%
select(year,low,high) %>%
distinct() %>%
mutate(category = 'Total Net Emissions') %>%
select(all_of(col_order))
if(category == 'gas'){
order_index <- c(2,1,4,3,5,6)
processed_datasets <- list()
for(gas in config$gas_order){
cat_summary <- summary %>%
filter(category == gas) %>%
group_by(proj_name, year) %>%
summarise(value = sum(cat_sum),.groups='drop') %>%
group_by(year) %>%
mutate(low = min(value),
high = max(value)) %>%
select(year, low, high) %>%
distinct() %>%
mutate(category = gas) %>%
select(all_of(col_order))
processed_datasets[[gas]] <- cat_summary
}
summary_table_df <- bind_rows(processed_datasets)
} else if(category == 'usproj_sector'){
processed_datasets <- list()
order_index <- c(2,5,3,1,6,4)
for(sector in config$sector_order){
cat_summary <- summary %>%
filter(category == sector) %>%
group_by(proj_name, year) %>%
summarise(value = sum(cat_sum),.groups='drop') %>%
group_by(year) %>%
mutate(low = min(value),
high = max(value)) %>%
select(year, low, high) %>%
distinct() %>%
mutate(category = sector) %>%
select(all_of(col_order))
processed_datasets[[sector]] <- cat_summary
}
summary_table_df <- bind_rows(processed_datasets)
}
else{rlang::abort('Enter "gas" or "usproj_sector" into as category.')}
summary_table_df_high_low <- create_high_low_df(summary_table_df)
summary_table_df_high_low <- summary_table_df_high_low[order_index,]
total_gross_emissions_high_low <- create_high_low_df(summary_total_gross)
total_net_emissions_high_low <- create_high_low_df(summary_total_net)
summary_lulucf_sink <- summary %>% filter(category == 'LULUCF Sink')%>%
group_by(category,proj_name, year) %>%
summarise(value = sum(cat_sum),.groups='drop') %>%
group_by(year) %>%
mutate(low = min(value),
high = max(value)) %>%
select(category, year, low, high) %>%
distinct()
lulucf_sink_high_low <- create_high_low_df(summary_lulucf_sink)
final_summary_table <- summary_table_df_high_low %>%
rbind(total_gross_emissions_high_low) %>%
rbind(lulucf_sink_high_low) %>%
rbind(total_net_emissions_high_low)
rownames(final_summary_table) <- NULL
final_summary_table <- final_summary_table %>% mutate_if(is.numeric, round)
numeric_cols <- sapply(final_summary_table,is.numeric)
final_summary_table[, numeric_cols] <- lapply(final_summary_table[, numeric_cols], scales::comma)
return(final_summary_table)
}
col_order <- c('category','year','low','high')
summary <- projections_all_sm %>%
filter(!gas == 'Total') %>%  # WTH?? fix pls usproj
rename(category = .data[[category]]) %>%
filter(grouping == grouping) %>%
filter(year %in% config$table) %>%
group_by(proj_name,category, year) %>%
summarise(cat_sum = sum(sum),.groups='drop')
summary_total_gross <- summary %>%
filter(!category == 'LULUCF Sink') %>%
group_by(proj_name, year) %>%
summarise(value = sum(cat_sum),.groups='drop') %>%
group_by(year) %>%
mutate(low = min(value),
high = max(value)) %>%
select(year,low,high) %>%
distinct() %>%
mutate(category = 'Total Gross Emissions') %>%
select(all_of(col_order))
summary_total_net <- summary %>%
group_by(proj_name, year) %>%
summarise(value = sum(cat_sum),.groups='drop') %>%
group_by(year) %>%
mutate(low = min(value),
high = max(value)) %>%
select(year,low,high) %>%
distinct() %>%
mutate(category = 'Total Net Emissions') %>%
select(all_of(col_order))
if(category == 'gas'){
order_index <- c(2,1,4,3,5,6)
processed_datasets <- list()
for(gas in config$gas_order){
cat_summary <- summary %>%
filter(category == gas) %>%
group_by(proj_name, year) %>%
summarise(value = sum(cat_sum),.groups='drop') %>%
group_by(year) %>%
mutate(low = min(value),
high = max(value)) %>%
select(year, low, high) %>%
distinct() %>%
mutate(category = gas) %>%
select(all_of(col_order))
processed_datasets[[gas]] <- cat_summary
}
summary_table_df <- bind_rows(processed_datasets)
} else if(category == 'usproj_sector'){
processed_datasets <- list()
order_index <- c(2,5,3,1,6,4)
for(sector in config$sector_order){
cat_summary <- summary %>%
filter(category == sector) %>%
group_by(proj_name, year) %>%
summarise(value = sum(cat_sum),.groups='drop') %>%
group_by(year) %>%
mutate(low = min(value),
high = max(value)) %>%
select(year, low, high) %>%
distinct() %>%
mutate(category = sector) %>%
select(all_of(col_order))
processed_datasets[[sector]] <- cat_summary
}
summary_table_df <- bind_rows(processed_datasets)
}
gas
category <- "gas"
category <- "gas"
grouping <- "wm"
col_order <- c('category','year','low','high')
summary <- projections_all_sm %>%
filter(!gas == 'Total') %>%  # WTH?? fix pls usproj
rename(category = .data[[category]]) %>%
filter(grouping == grouping) %>%
filter(year %in% config$table) %>%
group_by(proj_name,category, year) %>%
summarise(cat_sum = sum(sum),.groups='drop')
summary_total_gross <- summary %>%
filter(!category == 'LULUCF Sink') %>%
group_by(proj_name, year) %>%
summarise(value = sum(cat_sum),.groups='drop') %>%
group_by(year) %>%
mutate(low = min(value),
high = max(value)) %>%
select(year,low,high) %>%
distinct() %>%
mutate(category = 'Total Gross Emissions') %>%
select(all_of(col_order))
summary_total_net <- summary %>%
group_by(proj_name, year) %>%
summarise(value = sum(cat_sum),.groups='drop') %>%
group_by(year) %>%
mutate(low = min(value),
high = max(value)) %>%
select(year,low,high) %>%
distinct() %>%
mutate(category = 'Total Net Emissions') %>%
select(all_of(col_order))
if(category == 'gas'){
order_index <- c(2,1,4,3,5,6)
processed_datasets <- list()
for(gas in config$gas_order){
cat_summary <- summary %>%
filter(category == gas) %>%
group_by(proj_name, year) %>%
summarise(value = sum(cat_sum),.groups='drop') %>%
group_by(year) %>%
mutate(low = min(value),
high = max(value)) %>%
select(year, low, high) %>%
distinct() %>%
mutate(category = gas) %>%
select(all_of(col_order))
processed_datasets[[gas]] <- cat_summary
}
summary_table_df <- bind_rows(processed_datasets)
} else if(category == 'usproj_sector'){
processed_datasets <- list()
order_index <- c(2,5,3,1,6,4)
for(sector in config$sector_order){
cat_summary <- summary %>%
filter(category == sector) %>%
group_by(proj_name, year) %>%
summarise(value = sum(cat_sum),.groups='drop') %>%
group_by(year) %>%
mutate(low = min(value),
high = max(value)) %>%
select(year, low, high) %>%
distinct() %>%
mutate(category = sector) %>%
select(all_of(col_order))
processed_datasets[[sector]] <- cat_summary
}
summary_table_df <- bind_rows(processed_datasets)
} else{rlang::abort('Enter "gas" or "usproj_sector" into as category.')}
summary_table_df_high_low <- create_high_low_df(summary_table_df)
summary_table_df_high_low <- summary_table_df_high_low[order_index,]
total_gross_emissions_high_low <- create_high_low_df(summary_total_gross)
total_net_emissions_high_low <- create_high_low_df(summary_total_net)
summary_lulucf_sink <- summary %>% filter(category == 'LULUCF Sink')%>%
group_by(category,proj_name, year) %>%
summarise(value = sum(cat_sum),.groups='drop') %>%
group_by(year) %>%
mutate(low = min(value),
high = max(value)) %>%
select(category, year, low, high) %>%
distinct()
lulucf_sink_high_low <- create_high_low_df(summary_lulucf_sink)
final_summary_table <- summary_table_df_high_low %>%
rbind(total_gross_emissions_high_low) %>%
rbind(lulucf_sink_high_low) %>%
rbind(total_net_emissions_high_low)
rownames(final_summary_table) <- NULL
final_summary_table <- final_summary_table %>% mutate_if(is.numeric, round)
numeric_cols <- sapply(final_summary_table,is.numeric)
final_summary_table[, numeric_cols] <- lapply(final_summary_table[, numeric_cols], scales::comma)
#gas_df <- create_summary_table(category,grouping, projections_all_sm, config)
View(final_summary_table)
tar_make()
tar_make()
?tar_reander
?tar_render
tar_source()
tar_make()
tar_make()
tar_make()
tar_make()
tar_make()
